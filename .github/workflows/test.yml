name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ruby:2.6.5
    steps:
    - name: actions/checkout@v2
      uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        # path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        # # key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        # key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package-lock.json') }}
        # restore-keys: |
        #   ${{ runner.os }}-build-${{ env.cache-name }}-
        #   ${{ runner.os }}-build-
        #   ${{ runner.os }}-
        
        
        path: |
          ~/.cache/yarn
        key: |
          ${{ runner.os }}-projectname-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}-${{ hashFiles(format('{0}{1}', github.workspace, '/Gemfile.lock')) }}
        restore-keys: |
          ${{ runner.os }}-projectname-

    # - uses: actions/checkout@v1
    
    - name: Build and setup
      if: steps.cache.outputs.cache-hit != 'true'
      
      run: |
        # Set up node and yarn
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
        curl -sL https://deb.nodesource.com/setup_12.x | bash -
        apt install -y nodejs yarn

        # Build and setup
        bundle -j 4
        bin/setup

        # Install chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
        echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list
        apt update -y
        apt install -y google-chrome-stable

    - name: Rubocop
      run: |
        bundle exec rubocop ./rubocop.yml --parallel
        
    - name: Lint
      run: |
        bundle exec slim-lint app/views -c config/slim_lint.yml
        bin/yarn eslint app/javascript
        bin/yarn eslint test/javascript
    - name: Test
      run: |
        bundle exec rails test && bundle exec rails test:system
        yarn test
